
public class SignatureMagic {
	
	private int[] keyPair;
	private int message;
	
	public SignatureMagic(int[] _keyPair, int _message) {
		keyPair = _keyPair;
		message = _message;
	}
	
	  /**
	   * Verify the keypairs and message
	   * @param keyPair the keypair that is generated by generateKeyPair
	   * @param message the message
	   * @return true if verified, false if not.
	   */
	  public boolean verify(int[] keyPair, int message) {
		  int _signature = signature(keyPair, message);
		  int publicKey = keyPair[0];
		  int n_value = keyPair[2];
		  
		  return (Math.pow(_signature, publicKey) % n_value == (int) (Math.pow(message, publicKey) % n_value));
	  }
	  
		
	  /**
	   * Produces the signature according to the keyPair and messages
	   * @param keyPair the keyPair generated by generateKeyPair
	   * @param message the message to be sent
	   * @return the signature.
	   */
	  public int signature(int[] keyPair, int message) {
		  
		  int publicKey = keyPair[0];
		  int privateKey = keyPair[1];
		  int n_value = keyPair[2];
		  
		  int cipherText = (int) (Math.pow(message, publicKey) % n_value);
		  return ((int)( Math.pow(cipherText, privateKey) % n_value));
	  }

}
